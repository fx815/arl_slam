	<launch>

  <?ignore
    =========================================================
                        MavRos
    =========================================================
  ?> 
	<!-- vim: set ft=xml noet : -->
	<!-- example launch script for PX4 based FCU's -->

	<arg name="fcu_url" default="/dev/ttyACM0:921600" />
	<arg name="gcs_url" default="" />
	<arg name="tgt_system" default="1" />
	<arg name="tgt_component" default="1" />
	<arg name="log_output" default="screen" />
	<!--arg name="fcu_protocol" default="v2.0" /-->
	<!--arg name="respawn_mavros" default="false" /-->

	<include file="$(find mavros)/launch/node.launch">

		<arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
		<arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />

		<arg name="fcu_url" value="$(arg fcu_url)" />
		<arg name="gcs_url" value="$(arg gcs_url)" />
		<arg name="tgt_system" value="$(arg tgt_system)" />
		<arg name="tgt_component" value="$(arg tgt_component)" />
		<arg name="log_output" value="$(arg log_output)" />
		<!--arg name="fcu_protocol" value="$(arg fcu_protocol)" /-->
		<!--arg name="respawn_mavros" default="$(arg respawn_mavros)" /-->

    <!--inputs to mavros-->
    <remap from="/mavros/vision_pose/pose" to="vision_pose_out" />

	</include>

  <?ignore
    =========================================================
                           Vicon
    =========================================================
  ?>  

    <include file="$(find ros_vrpn_client)/launch/asl_vicon.launch" />

  <?ignore
    =========================================================
                     msg_converter_inv
    =========================================================
  ?>

  <node name="msg_converter" pkg="arl_slam" type="msg_converter" clear_params="true" output="screen">
    <!--inputs to msg_converter-->
    <remap from="transform_in" to="brett2/vrpn_client/raw_transform" />

  </node>


  <?ignore
    =========================================================
                    rotate_vision_pose
    =========================================================
  ?>

  <node name="rotate_vision_pose" pkg="arl_slam" type="rotate_vision_pose" clear_params="true" output="screen">

    <!--inputs to rotate_vision_pose-->
    <remap from="vision_pose_in" to="pose_out" />

  </node>

  <?ignore
    =========================================================
                        Nonlinear MPC
    =========================================================
  ?>    
    <node name="mav_nonlinear_mpc" pkg="mav_nonlinear_mpc" type="nonlinear_mpc_node" respawn="true" clear_params="true" output="screen">
    
      <remap from="odometry" to="msf_core/odometry" />
      <remap from="rc" to="mavros/rc/in" />
      <!--remap from="mavros/imu/data" to="output_imu" /-->

      <rosparam file="$(find arl_slam)/resources/nonlinar_mpc_parameters/nonlinear_mpc_brett_04.yaml" />
      <rosparam file="$(find arl_slam)/resources/disturbance_observer_parameters/disturbance_observer_brett_04.yaml"/>
      <param name="use_rc_teleop" value="true"/>
      <param name="autopilot_interface" value="mavros" />
      <param name="verbose" value="true" />
      <param name="reference_frame" value="world"/>

	</node>


</launch>
